<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[做个贪吃蛇游戏自己玩]]></title>
    <url>%2F2018%2F09%2F15%2F%E8%B4%AA%E5%90%83%E8%9B%87%2F</url>
    <content type="text"><![CDATA[利用Canvas与JavaScript实现贪吃蛇]]></content>
      <categories>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>Canvas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[原生JS实现回到页面顶部]]></title>
    <url>%2F2018%2F09%2F14%2F%E5%8E%9F%E7%94%9FJS%E5%AE%9E%E7%8E%B0%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%2F</url>
    <content type="text"><![CDATA[先上源代码(有空再写文)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276 &lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; * &#123; padding: 0; margin: 0; &#125; #div1 &#123; width: 100%; height: 100%; /* background: linear-gradient(to bottom, #CDDC39, rgb(36, 92, 212), green, red, gray, pink); */ &#125; #div1&gt;div &#123; width: 100%; height: 500px; text-align: center; font-size: 80px; &#125; .demo1 &#123; background-color: red; &#125; .demo2 &#123; background-color: green; &#125; .demo3 &#123; background-color: grey; &#125; .demo4 &#123; background-color: rgb(47, 0, 255); &#125; .demo5 &#123; background-color: rgb(216, 34, 207); &#125; .demo6 &#123; background-color: rgb(20, 162, 206); &#125; .demo7 &#123; background-color: rgb(179, 129, 22); &#125; .demo8 &#123; background-color: rgb(100, 196, 36); &#125; .demo9 &#123; background-color: rgb(19, 241, 85); &#125; .demo10 &#123; background-color: rgb(240, 40, 67); &#125; span &#123; width: 30px; height: 30px; border: 5px solid white; display: inline-block; position: fixed; right: 50px; bottom: 150px; border-radius: 50%; background: linear-gradient(to top right, rgb(82, 55, 12), rgb(43, 128, 197)); cursor: pointer; z-index: 2; opacity: 0.5; display: none; &#125; span:hover &#123; opacity: 1; &#125; i &#123; display: inline-block; width: 60px; height: 60px; border: 5px solid white; position: fixed; right: 35px; bottom: 135px; border-radius: 50%; background: linear-gradient(to top right, rgb(22, 134, 27), rgb(186, 218, 48)); display: none; &#125; ul &#123; position: fixed; left: 100px; top: 30%; width: 80px; height: 237px; &#125; ul&gt;li &#123; cursor: pointer; text-align: center; margin-bottom: 1px; background-color: rgb(86, 87, 82); list-style: none; border: 1px solid gray; color: white &#125; /* li:hover&#123; background-color: green; &#125; */ &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=&apos;div1&apos;&gt; &lt;div class=&quot;demo1&quot;&gt;一&lt;/div&gt; &lt;div class=&quot;demo2&quot;&gt;二&lt;/div&gt; &lt;div class=&quot;demo3&quot;&gt;三&lt;/div&gt; &lt;div class=&quot;demo4&quot;&gt;四&lt;/div&gt; &lt;div class=&quot;demo5&quot;&gt;五&lt;/div&gt; &lt;div class=&quot;demo6&quot;&gt;六&lt;/div&gt; &lt;div class=&quot;demo7&quot;&gt;七&lt;/div&gt; &lt;div class=&quot;demo8&quot;&gt;八&lt;/div&gt; &lt;div class=&quot;demo9&quot;&gt;九&lt;/div&gt; &lt;div class=&quot;demo10&quot;&gt;十&lt;/div&gt; &lt;/div&gt; &lt;span&gt;&lt;/span&gt; &lt;i&gt;&lt;/i&gt; &lt;ul class=&quot;item&quot;&gt; &lt;li id=&quot;demo1&quot;&gt;one&lt;/li&gt; &lt;li id=&quot;demo2&quot;&gt;two&lt;/li&gt; &lt;li id=&quot;demo3&quot;&gt;three&lt;/li&gt; &lt;li id=&quot;demo4&quot;&gt;four&lt;/li&gt; &lt;li id=&quot;demo5&quot;&gt;five&lt;/li&gt; &lt;li id=&quot;demo6&quot;&gt;six&lt;/li&gt; &lt;li id=&quot;demo7&quot;&gt;seven&lt;/li&gt; &lt;li id=&quot;demo8&quot;&gt;eight&lt;/li&gt; &lt;li id=&quot;demo9&quot;&gt;nine&lt;/li&gt; &lt;li id=&quot;demo10&quot;&gt;ten&lt;/li&gt; &lt;/ul&gt; &lt;script&gt; /*原生JS实现回到顶部动画分析： 1.获取当前scrollTop距离（var distance=document.documentElement.scrollTop||document.body.scrollTop） 2.总时间(var timer=500;单位：ms) 总共需要运动500ms 3.频率( var frequency=10;单位：ms) 每10ms运动一次 4.步长(var step=distance/timer*frequency) 每毫秒运动距离*频率=每一次运动所需步长 */ window.onload = function () &#123; var span = document.getElementsByTagName(&apos;span&apos;)[0]; var i = document.getElementsByTagName(&apos;i&apos;)[0]; var timer = 1000; //总时间 var frequency = 5; //频率 window.onscroll = show; function show() &#123; var dis = document.documentElement.scrollTop || document.body.scrollTop; var windis = window.screen.height; //屏幕分辨率高度 // console.log(windis); //当前滚动条距离大于一个屏幕高度时显示回到顶部按钮 if (dis &gt;= windis) &#123; span.style.display = &apos;block&apos;; i.style.display = &apos;block&apos;; &#125; else &#123; //当前滚动条距离小于一个屏幕高度时隐藏回到顶部按钮 span.style.display = &apos;none&apos;; i.style.display = &apos;none&apos;; &#125; &#125;; span.addEventListener(&apos;click&apos;, function (e) &#123; span.style.display = &apos;none&apos;; //单击后虽然设置为隐藏，但是由于滚动条顶部距离大于屏幕高度又触发上一个事件，使其又显示，所以当点击时需要阻止上一个事件发生； i.style.display = &apos;none&apos;; window.onscroll = null; //点击后阻止前一个DOM 0级事件 二级事件无法用此方法阻止 e = e || event; var disTop = document.documentElement.scrollTop || document.body.scrollTop; //获取运动前滚动条顶部距离 var step = (disTop / timer) * frequency; //步长 //定时器：每隔一定频率运动距离 var intime = window.setInterval(function () &#123; var curTop = document.documentElement.scrollTop || document.body.scrollTop; //获取滚动时当前滚动条距离 if (curTop === 0) &#123; window.clearInterval(intime); //当距离为0时清除定时器 window.onscroll = show; return; //中断执行 &#125; else &#123; curTop -= step; //使当前滚动条距离每隔frequency时间在当前距离基础上减去原始步长 &#125; //每隔frequency时间设置一次滚动条距离 document.documentElement.scrollTop = curTop; document.body.scrollTop = curTop; &#125;, frequency); &#125;); //左侧LI部分(使用事件委托给LI加随机背景颜色) var items = document.getElementsByTagName(&apos;li&apos;); var ul = document.getElementsByTagName(&apos;ul&apos;); // console.log(ul[0]); //事件委托：给父元素添加触发事件 ul[0].addEventListener(&apos;mouseover&apos;, function (e) &#123; e = e || event; var elem = e.target; //获取目标 elem.style.background = null; // 每一次触发事件都先初始化 var num = [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;, &apos;e&apos;, &apos;f&apos;, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]; //十六进制颜色 var colorNum = []; do &#123; var randomNum = Math.floor(Math.random() * 16); //0-15 //随机的0-15之间的一个数字作为十六进制数组下标 colorNum.push(num[randomNum]); &#125; while (colorNum.length &lt; 6); //将获取的6个随机数到空数组 // console.log(colorNum); var colorstr = colorNum.join(&apos;&apos;); //转为字符串 // console.log(colorstr); elem.style.background = &quot;#&quot; + colorstr; //设置随机颜色 &#125;); //鼠标离开时清空颜色 ul[0].addEventListener(&apos;mouseout&apos;, function (e) &#123; e = e || event; var elem = e.target; elem.style.background = null; &#125;); ul[0].addEventListener(&apos;click&apos;, function (e) &#123; e = e || event; var liElem = e.target; //利用时间委托获取目标 var liName = liElem.getAttribute(&apos;id&apos;) //获取目标id值 var divName = document.getElementsByClassName(liName)[0]; //获取对应名称的DIV模块元素 var top = divName.offsetTop; //获取对应的滚动条高度 var timer = 500; //总时间 var frequencytwo = 3; //频率 if (top &lt; timer) &#123; top += 500; &#125; var stepgo = (top / timer) * frequencytwo; //步长 //定时器：每隔一定频率运动距离 var intn = window.setInterval(function () &#123; var curTop = document.documentElement.scrollTop || document.body.scrollTop; //获取滚动时当前滚动条距离 if (curTop === top) &#123; window.clearInterval(intn); //当两者相同时清除定时器 return; //中断执行 &#125; if (curTop &gt; top) &#123; curTop -= stepgo; //使当前滚动条距离每隔frequency时间在当前距离基础上减去原始步长 &#125; if (curTop &lt; top) &#123; curTop += stepgo; &#125; //每隔frequency时间设置一次滚动条距离 document.documentElement.scrollTop = curTop; document.body.scrollTop = curTop; &#125;, frequencytwo); &#125;); &#125; &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
</search>
